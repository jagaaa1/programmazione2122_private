#BlueJ class context
comment0.target=Queens
comment0.text=\r\n\ Rompicapo\ delle\ "n\ regine"\r\n\r\n\ Ultimo\ aggiornamento\:\ 12/04/2018\r\n\r\n\r\n\ Dato\ astratto\ "configurazione\ della\ scacchiera"\:\ \ Board\r\n\r\n\ Operazioni\:\r\n\r\n\ \ \ new\ Board(\ int\ n\ )\ \ \ \ \ \ \ \ \ \ \ \:\ \ costruttore\ (scacchiera\ vuota)\r\n\r\n\ \ \ size()\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \:\ \ int\r\n\r\n\ \ \ queensOn()\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \:\ \ int\r\n\r\n\ \ \ underAttack(\ int\ i,\ int\ j\ )\ \ \:\ \ boolean\r\n\r\n\ \ \ addQueen(\ int\ i,\ int\ j\ )\ \ \ \ \ \:\ \ Board\r\n\r\n\ \ \ arrangement()\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \:\ \ String\r\n\r\n\r\n\ Board\ b;\r\n\r\n\ \ \ new\ Board(n)\ \ \ \ \ \ \ \ \ \ \ costruttore\ della\ scacchiera\ n\ x\ n\ vuota;\r\n\ \ \ b.size()\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ dimensione\ n\ della\ scacchiera\ b;\r\n\ \ \ b.queensOn()\ \ \ \ \ \ \ \ \ \ \ numero\ di\ regine\ collocate\ nella\ scacchiera\ b;\r\n\ \ \ b.underAttack(i,j)\ \ \ \ \ la\ posizione\ <i,j>\ e'\ minacciata?\r\n\ \ \ b.addQueen(i,j)\ \ \ \ \ \ \ \ scacchiera\ che\ si\ ottiene\ dalla\ configurazione\ b\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ aggiungendo\ una\ nuova\ regina\ in\ posizione\ <i,j>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (si\ assume\ che\ la\ posizione\ non\ sia\ minacciata);\r\n\ \ \ b.arrangement()\ \:\ \ \ \ \ \ descrizione\ "esterna"\ della\ configurazione\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (convenzioni\ scacchistiche).\r\n
comment1.params=n
comment1.target=int\ numberOfSolutions(int)
comment1.text=\r\n\ I.\ Numero\ di\ soluzioni\:\r\n\r\n\r\n\ Il\ numero\ di\ modi\ diversi\ in\ cui\ si\ possono\ disporre\ n\ regine\r\n\r\n\ \ \ numberOfSolutions(\ n\ )\r\n\r\n\ in\ una\ scacchiera\ n\ x\ n\ e'\ dato\ dal\ numero\ di\ modi\ diversi\ in\r\n\ cui\ si\ puo'\ completare\ la\ disposizione\ delle\ regine\ a\ partire\r\n\ da\ una\ scacchiera\ n\ x\ n\ inizialmente\ vuota\r\n\r\n\ \ \ numberOfCompletions(\ new\ Board(n)\ )\r\n
comment2.params=b
comment2.target=int\ numberOfCompletions(Board)
comment2.text=\r\n\ Il\ numero\ di\ modi\ in\ cui\ si\ puo'\ completare\ la\ disposizione\r\n\ a\ partire\ da\ una\ scacchiera\ b\ parzialmente\ configurata\r\n\r\n\ \ \ numberOfCompletions(\ b\ )\ \ \ \:\ int\r\n\r\n\ dove\ k\ regine\ (0\ <\=\ k\ <\ n)\ sono\ collocate\ nelle\ prime\ k\ righe\r\n\ di\ b,\ si\ puo'\ determinare\ a\ partire\ dalle\ configurazioni\r\n\ che\ si\ ottengono\ aggiungendo\ una\ regina\ nella\ riga\ k+1\ in\ tutti\r\n\ i\ modi\ possibili\ (nelle\ posizioni\ che\ non\ sono\ gia'\ minacciate)\r\n\r\n\ \ \ for\ (\ int\ j\=1;\ j<\=n;\ j\=j+1\ )\ {\r\n\ \ \ \ \ if\ (\ \!b.underAttack(i,j)\ )\ {\ ...\ b.addQueen(i,j)\ ...\ }\r\n\ \ \ }\r\n\r\n\ calcolando\ ricorsivamente\ per\ ciascuna\ di\ queste\ il\ numero\r\n\ di\ modi\ in\ cui\ si\ puo'\ completare\ la\ disposizione\r\n\r\n\ \ \ numberOfCompletions(\ b.addQueen(i,j)\ )\r\n\r\n\ e\ sommando\ i\ valori\ che\ ne\ risultano\r\n\r\n\ \ \ count\ \=\ count\ +\ numberOfCompletions(\ ...\ )\r\n\r\n\ Se\ invece\ la\ scacchiera\ rappresenta\ una\ soluzione\ (q\ \=\=\ n)\r\n\ c'e'\ un\ solo\ modo\ (banale)\ di\ completare\ la\ disposizione\:\r\n\ lasciare\ le\ cose\ come\ stanno\!\r\n
comment3.params=args
comment3.target=void\ main(java.lang.String[])
numComments=4
